public int {method_name}(double[] neurons) {{
    double[][] network = new double[this.layers.length + 1][];
    System.arraycopy(new double[][] {{neurons}}, 0, network, 0, 1);
    System.arraycopy(this.layers, 0, network, 1, this.layers.length);

    for (int i = 0; i < network.length - 1; i++) {{
        for (int j = 0; j < network[i + 1].length; j++) {{
            for (int l = 0; l < network[i].length; l++) {{
                network[i + 1][j] += network[i][l] * this.weights[i][l][j];
            }}
            network[i + 1][j] += this.bias[i][j];
        }}
        if ((i + 1) < (network.length - 1)) {{
            network[i + 1] = this.compute(this.hidden, network[i + 1]);
        }}
    }}
    network[network.length - 1] = this.compute(this.output, network[network.length - 1]);

    int classIdx = 0;
    for (int i = 0; i < network[network.length - 1].length; i++) {{
        classIdx = network[network.length - 1][i] > network[network.length - 1][classIdx] ? i : classIdx;
    }}
    return classIdx;
}}