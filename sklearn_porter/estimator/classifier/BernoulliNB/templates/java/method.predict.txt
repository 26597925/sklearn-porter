public int {method_name}(double[] features) {{
    if (features.length != {n_features}) return -1;

    double[] jll = new double[{n_classes}];
    for (int i = 0; i < {n_classes}; i++) {{
        double sum = 0.;
        for (int j = 0; j < {n_features}; j++) {{
            sum += features[i] * this.delProbs[j][i];
        }}
        jll[i] = sum;
    }}
    for (int i = 0; i < {n_classes}; i++) {{
        double sum = 0.;
        for (int j = 0; j < {n_features}; j++) {{
            sum += this.negProbs[i][j];
        }}
        jll[i] += this.priors[i] + sum;
    }}

    double highestLikeli = Double.NEGATIVE_INFINITY;
    int classIndex = -1;
    for (int i = 0; i < {n_classes}; i++) {{
        if (jll[i] > highestLikeli) {{
            highestLikeli = jll[i];
            classIndex = i;
        }}
    }}
    return classIndex;
}}