var {class_name} = function(nClasses, vectors, coefficients, intercepts, weights, kernel, gamma, coef0, degree) {{

    this.nClasses = nClasses;
    this.classes = new Array(nClasses);
    for (var i = 0; i < nClasses; i++) {{
        this.classes[i] = i;
    }}
    this.vectors = vectors;
    this.coefficients = coefficients;
    this.intercepts = intercepts;
    this.weights = weights;
    this.kernel = kernel.toUpperCase();
    this.gamma = gamma;
    this.coef0 = coef0;
    this.degree = degree;

    {method}

}};

if (typeof process !== 'undefined' && typeof process.argv !== 'undefined') {{
    if (process.argv.length - 2 === {n_features}) {{

        // Features:
        var features = process.argv.slice(2);

        // Parameters:
        {vectors}
        {coefficients}
        {intercepts}
        {weights}

        // Prediction:
        var clf = new {class_name}({n_classes}, vectors, coefficients, intercepts, weights, "{kernel}", {gamma}, {coef0}, {degree});
        var prediction = clf.{method_name}(features);
        console.log(prediction);

    }}
}}